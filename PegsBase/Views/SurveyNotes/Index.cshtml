@model PegsBase.Models.ViewModels.SurveyNotesListViewModel
@using PegsBase.Models.Enums

@{
    ViewData["Title"] = "Survey Notes";
}


<h2>Survey Notes</h2>

<form method="get" class="mb-3">
    <div class="row mb-2">
        <div class="col-md-3">
            <input type="text" name="search" value="@Model.FilterSearch" class="form-control" placeholder="Search by title..." />
        </div>
        <div class="col-md-2">
            <select name="type" class="form-select">
                <option value="">All Types</option>
                <option value="0" selected="@(Model.FilterType == SurveyNoteType.SurveyNote)">Survey Note</option>
                <option value="1" selected="@(Model.FilterType == SurveyNoteType.HolingNote)">Holing Note</option>
            </select>
        </div>
        <div class="col-md-2">
            <input type="text" name="level" value="@Model.FilterLevel" class="form-control" placeholder="Level..." />
        </div>

        <div class="col-md-2">
            <select name="status" class="form-select">
                <option value="">All Status</option>
                <option value="true" selected="@(Model.FilterIsSigned == true)">Signed</option>
                <option value="false" selected="@(Model.FilterIsSigned == false)">In Progress</option>
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
    </div>
</form>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Preview</th>
            <th>Note Number</th>
            <th>Locality</th>
            <th>Level</th>
            <th>Type</th>
            <th>Status</th>
            <th>Uploaded</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var note in Model.Notes)
        {
            <tr>
                <td>
                    <img src="~/@(string.IsNullOrEmpty(note.ThumbnailPath)
                                 ? "images/placeholder-thumbnail.png"
                                 : note.ThumbnailPath)"
                     alt="Thumbnail"
                     width="80"
                     height="113"
                     class="img-thumbnail" />
            </td>
                <td>@note.Title</td>
                <td>@note.Locality</td>
                <td>@note.Level</td>
                <td>@note.NoteType</td>
                <td>@(note.IsSigned ? "Signed" : "In Progress")</td>
                <td>@note.UploadedAt.ToString("yyyy/MM/dd")</td>
                <td>
                    <a href="@Url.Content(note.FilePath)" class="btn btn-sm btn-primary" target="_blank">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                            <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                            <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
                        </svg>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    int totalPages = (int)Math.Ceiling(Model.Total / (double)Model.PageSize);
}

@if (totalPages > 1)
{
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == Model.Page ? "active" : "")">
                    <a class="page-link"
                       href="?search=@Model.Search&type=@((int?)Model.FilterType)&page=@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}