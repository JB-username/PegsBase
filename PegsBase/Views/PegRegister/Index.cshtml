@model List<PegRegister>
@using PegsBase.Models.Constants

@{
	ViewData["Title"] = "Peg Register";
}

@{
	string filter = Context.Request.Query["filter"];
	string search = Context.Request.Query["search"];
	string sortOrder = Context.Request.Query["sortOrder"];
	bool isBeacon = filter == "Beacon";
	bool isControl = filter == "Control";
	bool showLevel = !isBeacon;
	bool showGrade = !(isBeacon || isControl);	
}



@if (TempData["Success"] != null)
{
	<div class="alert alert-info alert-dismissible fade show" role="alert" id="successAlert">
		<strong>Success:</strong> @TempData["Success"]
	</div>

	<script>
		setTimeout(function () {
			var alertElem = document.getElementById("successAlert");
			if (alertElem) {
				alertElem.classList.remove("show");
				alertElem.classList.add("hide");
			}
		}, 5000);
	</script>
}


<div class="container mb-2 mt-5 text-center">
	<h2>Peg Register</h2>
</div>

<div class="container mb-4">
	<div class="d-flex justify-content-between align-items-center flex-wrap mb-3">
		<h2 class="mb-3 mb-md-0"></h2>

		<div class="btn-group">
			

			<button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				Import Options
			</button>
			<ul class="dropdown-menu">
				<li><a class="dropdown-item" asp-action="Create">Manual Entry</a></li>
				<li><a class="dropdown-item" asp-action="Upload">Bulk Import CSV</a></li>
				<li><a class="dropdown-item" asp-action="UploadDat">Upload Coordinate File</a></li>
			</ul>
		</div>
	</div>

	<!-- Filters -->
	<form method="get" class="row g-2 mb-4">
		<div class="col-md-3">
			<input type="text" name="search" value="@search" class="form-control" placeholder="Search" />
		</div>

		<div class="col-md-3">
			<select name="filter" class="form-select">
				<option value="">All Types</option>
				<option value="Peg" selected="@(filter == "Peg")">Pegs</option>
				<option value="Control" selected="@(filter == "Control")">Controls</option>
				<option value="Beacon" selected="@(filter == "Beacon")">Beacons</option>
			</select>
		</div>

		<div class="col-md-3">
			<select name="sortOrder" class="form-select">
				<option value="date_desc" selected="@(sortOrder == "date_desc")">Newest First</option>
				<option value="date_asc" selected="@(sortOrder == "date_asc")">Oldest First</option>
				<option value="name_asc" selected="@(sortOrder == "name_asc")">Name A-Z</option>
				<option value="name_desc" selected="@(sortOrder == "name_desc")">Name Z-A</option>
			</select>
		</div>

		<div class="col-md-3 text-end">
			<button type="submit" class="btn btn-outline-primary w-100">Filter</button>
		</div>
	</form>
</div>

<div class="container mb-4 mt-1">
	<div class="row pt-4">		
		<div>
			@await Html.PartialAsync("_PegTable", Model)
		</div>
	</div>
</div>

@if (TempData["Success"]?.ToString()?.Contains("imported") == true)
{
	<script>
		window.addEventListener('DOMContentLoaded', (event) => {
			const toastEl = document.getElementById('uploadToast');
			const toast = new bootstrap.Toast(toastEl, { delay: 4000 });
			toast.show();
		});
	</script>
}

@if (TempData["Success"] != null)
{
	<script>
		window.addEventListener('DOMContentLoaded', () => {
			showToast('@TempData["Success"]', 'success');
		});
	</script>
}


<script>
	document.addEventListener('DOMContentLoaded', function () {
			const checkboxes = document.querySelectorAll('.export-check');
			 const exportButtons = document.getElementById('exportButtons');

			function toggleExportButtons() {
				const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
				exportButtons.classList.toggle('visible', anyChecked);
			}

			checkboxes.forEach(cb => {
				cb.addEventListener('change', toggleExportButtons);
			});

			toggleExportButtons(); // Run on load
		});
</script>


